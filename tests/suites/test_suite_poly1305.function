/* BEGIN_HEADER */
#include "mbedtls/poly1305.h"
#include <stddef.h>
/* END_HEADER */

/* BEGIN_CASE depends_on:MBEDTLS_POLY1305_C */
void mbedtls_poly1305( char *hex_key_string, char *hex_mac_string, char *hex_src_string  )
{
    unsigned char src_str[375]; /* max size of binary input */
    unsigned char key[32]; /* size set by the standard */
    unsigned char mac[16]; /* size set by the standard */
    unsigned char mac_str[33]; /* hex expansion of the above */
    size_t src_len;
    mbedtls_poly1305_context ctx;

    memset( src_str, 0x00, sizeof( src_str ) );
    memset( mac_str, 0x00, sizeof( mac_str ) );
    memset( key,     0x00, sizeof( key ) );
    memset( mac,     0x00, sizeof( mac ) );

    src_len = unhexify( src_str, hex_src_string );
    unhexify( key, hex_key_string );

    /*
     * Test the integrated API
     */
    mbedtls_poly1305_mac( key, src_str, src_len, mac );

    hexify( mac_str, mac, 16 );
    TEST_ASSERT( strcmp( (char *) mac_str, hex_mac_string ) == 0 );

    /*
     * Test the streaming API
     */
    mbedtls_poly1305_init( &ctx );

    TEST_ASSERT( mbedtls_poly1305_starts( &ctx, key ) == 0 );

    TEST_ASSERT( mbedtls_poly1305_update( &ctx, src_str, src_len ) == 0 );

    TEST_ASSERT( mbedtls_poly1305_finish( &ctx, mac ) == 0 );

    hexify( mac_str, mac, 16 );
    TEST_ASSERT( strcmp( (char *) mac_str, hex_mac_string ) == 0 );

    /*
     * Test the streaming API again, piecewise
     */

    /* Don't free/init the context, in order to test that starts() does the
     * right thing. */
    TEST_ASSERT( mbedtls_poly1305_starts( &ctx, key ) == 0 );

    TEST_ASSERT( mbedtls_poly1305_update( &ctx, src_str, 1 ) == 0 );
    TEST_ASSERT( mbedtls_poly1305_update( &ctx, src_str + 1, src_len - 1) == 0 );

    TEST_ASSERT( mbedtls_poly1305_finish( &ctx, mac ) == 0 );

    hexify( mac_str, mac, 16 );
    TEST_ASSERT( strcmp( (char *) mac_str, hex_mac_string ) == 0 );

    mbedtls_poly1305_free( &ctx );
}
/* END_CASE */

/* BEGIN_CASE depends_on:MBEDTLS_POLY1305_C:MBEDTLS_SELF_TEST */
void poly1305_selftest()
{
    TEST_ASSERT( mbedtls_poly1305_self_test( 1 ) == 0 );
}
/* END_CASE */
